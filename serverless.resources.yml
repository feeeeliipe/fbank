# Shared Infrastructure
AccountSns:
  Type: AWS::SNS::Topic
  Properties:
    TopicName: ${self:provider.stage}-fbank-account
    DisplayName: 'Account Events'
    FifoTopic: false
EntrySns:
  Type: AWS::SNS::Topic
  Properties:
    TopicName: ${self:provider.stage}-fbank-entry
    DisplayName: 'Entry Events'
    FifoTopic: false

# Account Service Resources
AccountTable:
  Type: AWS::DynamoDB::Table
  Properties:
    TableName: ${self:provider.stage}-fbank-accounts
    ProvisionedThroughput:
      ReadCapacityUnits: 1
      WriteCapacityUnits: 1
    AttributeDefinitions:
      - AttributeName: pk
        AttributeType: S
      - AttributeName: sk
        AttributeType: S
    KeySchema:
      - AttributeName: pk
        KeyType: HASH
      - AttributeName: sk
        KeyType: RANGE

# Credit Analysis Service Resources
CreditAnalyzerTable:
  Type: AWS::DynamoDB::Table
  Properties:
    TableName: ${self:provider.stage}-fbank-credit-analyzer
    ProvisionedThroughput:
      ReadCapacityUnits: 1
      WriteCapacityUnits: 1
    AttributeDefinitions:
      - AttributeName: pk
        AttributeType: S
      - AttributeName: sk
        AttributeType: S
    KeySchema:
      - AttributeName: pk
        KeyType: HASH
      - AttributeName: sk
        KeyType: RANGE
CreditAnalyzerServiceAccountsQueue:
  Type: AWS::SQS::Queue
  Properties:
    QueueName: ${self:provider.stage}-credit-analyzer-accounts
SNSSubForCreditAnalyzerServiceAccountDataQueue:
  Type: AWS::SNS::Subscription
  Properties:
      TopicArn: { "Fn::Join" : ["", ["arn:aws:sns:${self:provider.region}:", { "Ref" : "AWS::AccountId" }, ":${self:resources.Resources.AccountSns.Properties.TopicName}" ] ] }
      Protocol: sqs
      Endpoint:
        Fn::GetAtt: [CreditAnalyzerServiceAccountsQueue, Arn]
      FilterPolicy:
        eventName:
          - account.created
          - account.updated
CreditAnalyzerServiceUpdateCreditRequestsQueue:
  Type: AWS::SQS::Queue
  Properties:
    QueueName: ${self:provider.stage}-credit-analyzer-update-credit-requests
SNSSubForCreditAnalyzerServiceUpdateCreditRequestsQueue:
  Type: AWS::SNS::Subscription
  Properties:
      TopicArn: { "Fn::Join" : ["", ["arn:aws:sns:${self:provider.region}:", { "Ref" : "AWS::AccountId" }, ":${self:resources.Resources.AccountSns.Properties.TopicName}" ] ] }
      Protocol: sqs
      Endpoint:
        Fn::GetAtt: [CreditAnalyzerServiceUpdateCreditRequestsQueue, Arn]
      FilterPolicy:
        eventName:
          - account.created
          - account.updated

